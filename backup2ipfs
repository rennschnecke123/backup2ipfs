#!/bin/bash



mode=$1

# ipfs+ipns 
ipfsDIR=/ipfs
ipnsDIR=/ipns


IFS=$'\n'

if [ "$mode" == "" ];
then
	mode="--help"
fi


if [ "$mode" == "--help" ];
then
	echo "Syntax:"
	echo "backup2ipfs copy"
	echo "-> copy data to ipfs"
	echo "backup2ipfs move"
	echo "-> move data to ipfs"
	echo "backup2ipfs rebuild"
	echo "-> get data from ipfs"
	echo "backup2ipfs pin"
	echo "-> pin data to local ipfs server"
	echo ""
	echo " for symbolic links ipfs need to be started with mount option!"
	echo " ipfs daemon --mount &"
	exit 0
fi


# recreate local list
cp -f ipfs-urls.txt ipfs-urls.txt.tmp && mv -f ipfs-urls.txt.tmp ipfs-urls.txt

# read old urls
urls=$(cat ipfs-urls.txt)

if [ "$mode" != "rebuild" ] && [ "$mode" != "pin" ];
then
	# push to ipfs
	for item in $(find ./ -mindepth 1 -type f -not -name \#\* -not -name ipfs-urls.txt)
	do
		echo $item
		ID=$(ipfs add "$item" 2>/dev/null| tail -n1 | cut -d ' ' -f 2)
		if [ "$ID" != "" ];
		then
			echo "done"
			if [ "$mode" == "move" ];
			then
				rm -rf "$item"
			fi
			urls=$(echo -e "$urls\n$ID;$item")
			echo "$ID;$item" >> ipfs-urls.txt
		else
			echo "error"
		fi
	done
fi

echo -e "$urls" | sort | uniq > ipfs-urls.txt
cat << EOF >> ipfs-urls.txt
# created with backup2ipfs - https://github.com/rennschnecke123/backup2ipfs
EOF

if [ "$mode" != "pin" ];
then
	# symb links
	for allIDs in $(cat ipfs-urls.txt | grep -v ^\#);
	do
		ID=$(echo $allIDs | cut -d';' -f1)
		filePATH=$(echo $allIDs | cut -d';' -f2)
		if [ "$mode" == "move" ] || [ "$mode" == "rebuild" ];
		then
			echo $allIDs
			echo "$filePATH"
			createPATH=$(echo $filePATH | rev | cut -d'/' -f2- | rev)
			mkdir -p "$createPATH" >/dev/null 2>&1
			(cp -vans "$ipfsDIR/$allIDs" ./  >/dev/null 2>&1) || (/usr/bin/wget -nc -nH --cut-dirs=2 -O "$filePATH" "http://localhost:8080/ipfs/$ID") || (/usr/bin/wget -nc -nH --cut-dirs=2 -O "$filePATH" "https://ipfs.io/ipfs/$ID")
		fi
	done
	if [ "$mode" == "copy" ] || [ "$mode" == "rebuild" ];
	then
		find -type l -print -exec cp "{}" "{}.tmp" \; -exec mv "{}.tmp" "{}" \;  2>/dev/null
	fi
else
	for data in $(cat ipfs-urls.txt | cut -d ";" -f1 | grep Qm | sed "s/\\\"//g");
	do
        	echo $data;
	        ipfs pin add --progress $data || exit 1
	done
fi
